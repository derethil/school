Jaren Glenn
CS1400 - 2
Assignemnt 14

Task 3

Software Development Lifecycle

1. System Requirements
  This program will prompt the user with a menu to add/remove rectangles and circles from a list of shapes. 
  The parameters include position, color, and radius/height & width.
  When the user is finished they will be able to draw the shapes or quit the program.

2. System Analysis
  assn14-task3.py will import the rectangle and circle classes from their respective files.
  Volume is equal to length * width * height.
  Surface area is equal to 2 * (length * width + length * height + width * height)

3. System Design
  1. Define a chooseColor class to ask user for their color choice, to be used by both circles and rectangles
    a. Only accept red, yellow, blue, green
  2. Define main function for everything else
    a. Display menu to user and ask for their input
    b. Add a shape to the list:
      1. Ask user for various parameters
      2. Convert them to a useable type
      3. Append a shape to shapeList with those parameters
    c. Remove shape from the list:
      1. Print current shapes and a number to pick to delete them
      2. Ask user for deletion choice
      3. Pop choice from list
    d. Draw shapes
      a. Reset turtle canvas
      b. Use a for loop to call draw() of each shape in the list
    e. Exit
      1. Exit the loop/program
  3. Call main()

4. Testing
  Test 1:
    Input:
      1 to Enter circle
      0,0 position
      100 radius
      red

      2 to enter rectangle
      300,0 position
      150 height
      50 width
      blue

      4 to draw shapes
    Output:
      the shapes 
    Passed
  Test 2:
    Input: 
      1 to Enter circle
      0,0 position
      100 radius
      red

      2 to enter rectangle
      300,0 position
      150 height
      50 width
      blue

      3 to remove shape
      remove the circle

      4 to draw shapes
    Output:
      only the rectangle
    Passed


Unified Modeling Langauge

------------------------------
Circle(tur: turtle, position: list, radius: float, color: string)
------------------------------
-tur: Turtle object
-position: list
-radius: float
-color: string
------------------------------
draw(): None
------------------------------

------------------------------
Rectangle(tur: turtle, position: list, height: float, width: float, color: string)
------------------------------
draw(): None
------------------------------
-tur: turtle object
-position: list
-height: float
-width: float
-color: string
------------------------------
